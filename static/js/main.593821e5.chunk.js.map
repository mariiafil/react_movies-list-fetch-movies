{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/getMovie.ts","api/constants.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","getMovie","query","a","fetch","response","json","FindMovie","addMovie","useState","setMovie","setQuery","error","setError","htmlFor","type","id","onChange","e","target","value","onFocus","placeholder","onClick","then","movieFromServer","Title","Plot","Poster","imdbID","Response","App","state","data","find","existingMovie","setState","prevState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.593821e5.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map((movie) => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import { URL } from './constants';\n\nexport const getMovie = async (query: string): Promise<MovieFromServer> => {\n  const response = await fetch(URL + query);\n\n  return response.json();\n};\n","export const URL = 'https://www.omdbapi.com/?apikey=e24c755f&t=';\nexport const URL_IMDB = 'https://www.imdb.com/title/';\n","import React, {\n  FC, useState, ChangeEvent,\n} from 'react';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api/getMovie';\nimport { URL_IMDB } from '../../api/constants';\n\n\ninterface Props {\n  addMovie: (movie: Movie) => void;\n}\n\nexport const FindMovie: FC<Props> = ({ addMovie }) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [query, setQuery] = useState('');\n  const [error, setError] = useState(false);\n\n  const handleInput = (e: ChangeEvent<HTMLInputElement>): void => {\n    setQuery(e.target.value);\n  };\n\n  const handleSearch = (): void => {\n    getMovie(query)\n      .then(movieFromServer => {\n        const {\n          Title: title, Plot: description, Poster: imgUrl, imdbID: imdbId, Response,\n        } = movieFromServer;\n\n        if (Response === 'True') {\n          const imdbUrl = URL_IMDB + imdbId;\n          const newMoovie = {\n            title, description, imgUrl, imdbId, imdbUrl,\n          };\n\n          setMovie(newMoovie);\n        } else {\n          setError(true);\n        }\n      });\n  };\n\n  const handleAdd = () => {\n    if (movie) {\n      addMovie(movie);\n      setQuery('');\n      setMovie(null);\n    }\n  };\n\n  const handleFocus = () => {\n    setError(false);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n          Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              onChange={handleInput}\n              onFocus={handleFocus}\n              value={query}\n              placeholder=\"Enter a title to search\"\n              className={error ? 'input is-danger' : 'input'}\n            />\n          </div>\n          {error && (\n            <p className=\"help is-danger\">\n               Can&apos;t find a movie with such a title\n            </p>\n          )}\n\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={handleSearch}\n            >\n            Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              onClick={handleAdd}\n              className=\"button is-primary\"\n            >\n            Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        <p>{movie?.title}</p>\n        {movie && <MovieCard {...movie} />}\n      </div>\n    </>\n  );\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends Component<{}, State> {\n  state = {\n    movies: data,\n  };\n\n  addMovie = (movie: Movie): void => {\n    if (!this.state.movies\n      .find(existingMovie => movie.imdbId === existingMovie.imdbId)) {\n        this.setState(prevState => ({\n          movies: [...prevState.movies, movie],\n        }));\n    }   \n  }\n \n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bulma/css/bulma.css';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}